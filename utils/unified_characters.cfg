#textdomain wesnoth-h2tt


#######################################################################################################################################################
#                                                                   UTILITY MACROS
#######################################################################################################################################################
#############################
# KONRAD SIDE
#############################
#define KONRAD_SIDE GOLD
#arg FOG
no#endarg
#arg SHROUD
no#endarg
    [side]
        side,controller,color=1,human,blue
        defeat_condition,gold=never,{GOLD}
        {SINGLEUNITWML_KONRAD}
        team_name,user_team_name=konrad,_"Konrad and Allies"
        fog,shroud={FOG},{SHROUD}
        {FLAG_VARIANT long}
    [/side]
#enddef

#############################
# RECALL COMPANIONS
#############################
#define RECALL_KONRAD_AND_COMPANIONS X Y
    {RECALL_XY Konrad    {X} {Y}} {REDRAW}
    {RECALL_XY Delfador  {X} {Y}} {REDRAW}
    {RECALL_XY Kalenz    {X} {Y}} {REDRAW}
    
    {RECALL_XY Moremirmu {X} {Y}} {REDRAW}
    {RECALL_XY Harper    {X} {Y}} {REDRAW}
    {RECALL_XY Somf      {X} {Y}} {REDRAW}
    {RECALL_XY Elrian    {X} {Y}} {REDRAW}
    
    {RECALL_XY Ulfdain   {X} {Y}} {REDRAW}
    {RECALL_XY Chantal   {X} {Y}} {REDRAW}
    {RECALL_XY Dosh      {X} {Y}} {REDRAW}
#enddef

#############################
# NEW RECRUIT / COMPANION
#############################
#define NEW_RECRUIT1 RECRUITS MESSAGE IMAGE1
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(72,72)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)"}
#enddef
#define NEW_RECRUIT2 RECRUITS MESSAGE IMAGE1 IMAGE2
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(108,72)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)~BLIT(units/{IMAGE2}~RC(magenta>red),36,0)"}
#enddef
#define NEW_RECRUIT3 RECRUITS MESSAGE IMAGE1 IMAGE2 IMAGE3
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(108,108)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)~BLIT(units/{IMAGE2}~RC(magenta>red),36,0)~BLIT(units/{IMAGE3}~RC(magenta>red),18,48)"}
#enddef
#define NEW_RECRUIT4 RECRUITS MESSAGE IMAGE1 IMAGE2 IMAGE3 IMAGE4
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(108,108)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)~BLIT(units/{IMAGE2}~RC(magenta>red),36,0)~BLIT(units/{IMAGE3}~RC(magenta>red),0,48)~BLIT(units/{IMAGE4}~RC(magenta>red),36,48)"}
#enddef
#define _NEW_RECRUIT RECRUITS MESSAGE IMAGE_FULL_PATH
    [object]
        {FILTER id=Konrad} duration=turn
        image={IMAGE_FULL_PATH}
        name=_"New Recruits:"
        description={MESSAGE}
    [/object]
    [allow_extra_recruit]
        id=Konrad
        extra_recruit={RECRUITS}
    [/allow_extra_recruit]
#enddef





#######################################################################################################################################################
#                                                                FIND COMPANION AND SAY
#######################################################################################################################################################
#define SPEAK ID MESSAGE_SPEAKER MESSAGE_GENERIC
    # if we have a custom message, say that one
    {VARIABLE message {MESSAGE_SPEAKER}}
    [if]{HAVE_UNIT side,id=1,{ID}}
        {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes}
        {VARIABLE_CONDITIONAL message not_equals none}
        {VARIABLE_CONDITIONAL message not_equals ""}
    {THEN(
        [message]
            speaker={ID}
            message=$message
        [/message]
        {VARIABLE companion_already_spoke yes}
    )} [/if]
    
    # if we have a generic message, fall back to that one
    {VARIABLE message {MESSAGE_GENERIC}}
    [if]{HAVE_UNIT side,id=1,{ID}}
        {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes}
        {VARIABLE_CONDITIONAL message not_equals none}
        {VARIABLE_CONDITIONAL message not_equals ""}
    {THEN(
        [message]
            speaker={ID}
            message=$message
        [/message]
        {VARIABLE companion_already_spoke yes}
    )} [/if]
#enddef

#############################
# MAIN MACRO
#############################
# Priority: e.g. "Delfador,Harper" - first we check Delfador, then we check Harper, then we randomly check the other companions
# message_generic: if not provided, we'll only speak if one of the specific companions matches

#define FIND_COMPANION_AND_SAY
#arg PRIORITY
none#endarg
#arg MESSAGE_GENERIC
none#endarg
#arg MESSAGE_DELFADOR
none#endarg
#arg MESSAGE_MOREMIRMU
none#endarg
#arg MESSAGE_HARPER
none#endarg
#arg MESSAGE_ULFDAIN
none#endarg
#arg MESSAGE_KALENZ
none#endarg
#arg MESSAGE_CHANTAL
none#endarg
#arg FALLBACK_KONRAD
none#endarg
    #############################
    # PRIORITIZE SPEAKER
    #############################
    {VARIABLE companions {PRIORITY}}
    [if] {VARIABLE_CONDITIONAL companions not_equals none} {THEN(
        [set_variables]
            name,moda=companions,replace
            [split]
                list,key=$companions,id # e.g. $companions[$i].id
                separator,remove_empty=",",yes
            [/split]
        [/set_variables]
        [foreach]
            array=companions
            variable=companion # e.g. $companion.id
            [do]
                [if] {VARIABLE_CONDITIONAL companion.id equals Delfador } {THEN(  {SPEAK $companion.id {MESSAGE_DELFADOR } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Moremirmu} {THEN(  {SPEAK $companion.id {MESSAGE_MOREMIRMU} {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Harper   } {THEN(  {SPEAK $companion.id {MESSAGE_HARPER   } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Ulfdain  } {THEN(  {SPEAK $companion.id {MESSAGE_ULFDAIN  } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Kalenz   } {THEN(  {SPEAK $companion.id {MESSAGE_KALENZ   } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Chantal  } {THEN(  {SPEAK $companion.id {MESSAGE_CHANTAL  } {MESSAGE_GENERIC}}  )} [/if]
            [/do]
        [/foreach]
    )} [/if]
    
    #############################
    # RANDOMLY PICK SPEAKER
    #############################
    # randomly try a bunch of different speakers, in lieu of a proper array shuffle
    # NOT Dosh, as he speaks unusually and would look even more out-of-place than the others with a geneic message
    {VARIABLE companions "Delfador,Moremirmu,Harper,Ulfdain,Kalenz,Chantal"}
    
    # first prefer speaking on whichever companion has a custom message
    {REPEAT 50 (
        {VARIABLE_OP companion rand $companions}
        [if] {VARIABLE_CONDITIONAL companion equals Delfador } {THEN(  {SPEAK $companion {MESSAGE_DELFADOR } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Moremirmu} {THEN(  {SPEAK $companion {MESSAGE_MOREMIRMU} ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Harper   } {THEN(  {SPEAK $companion {MESSAGE_HARPER   } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Ulfdain  } {THEN(  {SPEAK $companion {MESSAGE_ULFDAIN  } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Kalenz   } {THEN(  {SPEAK $companion {MESSAGE_KALENZ   } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Chantal  } {THEN(  {SPEAK $companion {MESSAGE_CHANTAL  } ""}  )} [/if]
    )}
    
    # otherwise fall back to the generic message
    {REPEAT 50 (
        {VARIABLE_OP companion rand $companions}
        [if] {VARIABLE_CONDITIONAL companion equals Delfador } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Moremirmu} {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Harper   } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Ulfdain  } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Kalenz   } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Chantal  } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
    )}
    
    #############################
    # NO COMPANION
    #############################
    # konrad fallback - have konrad speak
    [if] {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes} {THEN(
        {SPEAK Konrad {FALLBACK_KONRAD} ""}
    )} [/if]
    
    # no konrad fallback specified - pick a high-level unit
    [if] {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes} {THEN(
        {CLEAR_VARIABLE speaker_id}
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,3-99 {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,2    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,1    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,0    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  id=Konrad                          ) id speaker_id})} [/if]
        {SPEAK $speaker_id "" {MESSAGE_GENERIC}}
    )} [/if]
    {CLEAR_VARIABLE companion,companions,message,companion_already_spoke,speaker_id}
#enddef






















#######################################################################################################################################################
#                                                                CHARACTER DEFINITIONS
#######################################################################################################################################################
#############################
# NPC STORING / UNSTORING
#############################
# to ensure we never duplicate NPCs, and to keep the XP/stats on NPCs consistent, don't spawn them directly
# instead, create them once at the beginning of the campaign, and store/unstore them as needed
#define STORE_NPC ID
#arg KILL
yes#endarg
#arg NOT_SIDE # by default don't store units that're on side 1; trust the regular recall system to handle them
1#endarg
    [if] {HAVE_LOCATION({FILTER( id={ID} {NOT side={NOT_SIDE}} )})} # can't rely solely on {HAVE_UNIT}, because that ignores units with 0 or less HP
     {OR({HAVE_UNIT( id,search_recall_list={ID},yes {NOT side={NOT_SIDE}} )} )}
    {THEN(
        {MODIFY_UNIT id={ID} status.poisoned no}
        {MODIFY_UNIT id={ID} status.slowed   no}
        [store_unit]
            {FILTER id={ID}}
            variable,kill=stored_{ID},{KILL}
        [/store_unit]
        {VARIABLE stored_{ID}.hitpoints $stored_{ID}.max_hitpoints}
        {VARIABLE stored_{ID}.moves     $stored_{ID}.max_moves    }
        {VARIABLE stored_{ID}.attacks_left 1}
    )} [/if]
#enddef
#define UNSTORE_NPC ID KEYS MODS
    # if unit exists, remove them
    {STORE_NPC {ID} NOT_SIDE=999} # store the NPC even if they're on side 1
    
    # if the side is invalid when we unstore, we get an error (before [modify_unit] can change the side). Therefore, make all stored units side 1 by default
    {VARIABLE stored_{ID}.side 1}
    
    # unstore them
    [unstore_unit]
        variable=stored_{ID}
        find_vacant=yes # by default; can be overriden in {KEYS}
        {KEYS}
    [/unstore_unit]
    [modify_unit]
        {FILTER id={ID}}
        {MODS}
    [/modify_unit]
#enddef
#define GLOBAL__AUTOSTORE_NPCs
    [event]
        name=victory,store_npcs
        first_time_only=no
        priority=-999 # after every event, including those that might involve NPCs
        
        # human NPCs
        {STORE_NPC Delfador}
        {STORE_NPC Kaylan}
        {STORE_NPC Maddock}
        {STORE_NPC Reglok}
        
        # nonhuman NPCs
        {STORE_NPC Ethiliel}
        {STORE_NPC Galdrad}
        
        # enemy NPCs
        {STORE_NPC Lisar}
        {STORE_NPC Isolde}
        {STORE_NPC Mirya}
        {STORE_NPC Warven}
        {STORE_NPC Asheviere}
        
        # companions
        {STORE_NPC Kalenz}
        {STORE_NPC Ulfdain}
        {STORE_NPC Harper}
        {STORE_NPC Somf}
        {STORE_NPC Moremirmu}
        {STORE_NPC Dosh}
    [/event]
#enddef

#############################
# DEFINE NPCS
#############################
# loyal, but for units who're also leaders
# (the regular loyal trait causes visual glitches)
#define TRAIT_LOYAL_DUMMY
    [trait]
        id,name=loyal_dummy,_"loyal"
        description= _ "Zero upkeep"
        {EFFECT loyal ()}
    [/trait]
#enddef

#define SINGLEUNITWML_KONRAD
    id,name,type=Konrad,_"Konrad",Fighter
    {MODIFICATIONS({TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT})}
    canrecruit=yes
#enddef

#define GLOBAL__INITIAL_NPC_SPAWN
    [event]
        name=spawn_npcs # this should only ever be called once (in S01), but we make it a global event for debug purposes
        #------------------------
        # ALLY NPCS
        #------------------------
        [unit]
            id,name,type=Delfador,_"Delfador",Delfador
            {MODIFICATIONS(
                {TRAIT_LOYAL_DUMMY}{TRAIT_AGED}
                {TEAM_COLOR_OVERRIDE () purple}
                [object] {EFFECT profile portrait="portraits/delfador.webp"} [/object])}
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Kaylan,_"Sir Kaylan",Grand Knight
            {MODIFICATIONS(
                {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () green}
                [object] {EFFECT profile portrait="portraits/humans/grand-knight-2.webp"} [/object])}
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Maddock,_"Lord Maddock",Lord of Elensefar
            {MODIFICATIONS(
                {TRAIT_INTELLIGENT} {TRAIT_RESILIENT}
                {TEAM_COLOR_OVERRIDE () blue}
                [object] {EFFECT profile portrait="portraits/maddock.webp"} [/object])}
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Reglok,_"Reglok",Rogue
            {MODIFICATIONS(
                {TRAIT_LOYAL_DUMMY} {TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () teal})}
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Ethiliel,_"Ethiliel",Elvish Shyde
            {MODIFICATIONS(
                {TRAIT_LOYAL_DUMMY}{TRAIT_RESILIENT}
                {TEAM_COLOR_OVERRIDE () brightgreen} 
                [object] {EFFECT profile portrait="portraits/ethiliel.webp"} [/object])}
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Galdrad,_"Galdrad",Elvish Champion
            {MODIFICATIONS(
                {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () brightgreen} )}
            canrecruit=yes
        [/unit]
        
        #------------------------
        # ENEMY NPCS
        #------------------------
        [unit]
            id,name,type,gender=Lisar,_"Li'sar",Princess,female
            profile=portraits/lisar.webp
            {MODIFICATIONS(
                {TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT}
                {TEAM_COLOR_OVERRIDE () lisarcolor} )}
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type,gender=Isolde,_"Isolde",General,female
            profile=portraits/isolde-old.png
            {MODIFICATIONS(
                {TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT}
                {TEAM_COLOR_OVERRIDE () wesred} )}
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type,gender=Mirya,_"Mirya",Silver Mage,female
            {MODIFICATIONS(
                {TRAIT_LOYAL}{TRAIT_QUICK}
                {TEAM_COLOR_OVERRIDE () wesred} )}
        [/unit]
        [unit]
            id,name,type=Warven,_"Warven",Lieutenant
            {MODIFICATIONS(
                {TRAIT_LOYAL}{TRAIT_FEARLESS}
                {TEAM_COLOR_OVERRIDE () wesred} )}
            canrecruit=yes
        [/unit]
        
        #------------------------
        # COMPANIONS
        #------------------------
        [unit]
            id,name,type=Kalenz,_"Kalenz",Elvish High Lord
            {MODIFICATIONS(
                {TRAIT_LOYAL} {TRAIT_AGED}
                {TEAM_COLOR_OVERRIDE () green}
                [object] {EFFECT profile portrait="portraits/kalenz.webp"} [/object])}
        [/unit]
        [unit]
            id,name,type=Ulfdain,_"Ulfdain",Dwarvish Ulfserker
            {MODIFICATIONS(
                {TRAIT_LOYAL}{TRAIT_HEALTHY}
                {TEAM_COLOR_OVERRIDE () brown} )}
        [/unit]
        [unit]
            id,name,type,gender=Harper,_"Harper",Fugitive,female
            {MODIFICATIONS(
                {TRAIT_LOYAL}{TRAIT_RESILIENT}
                [object] {EFFECT attack range,increase_damage=ranged,1} [/object] # mimic the backpack object that harper can pick up in Liberty
                [object] {EFFECT profile portrait="portraits/harper-old.webp"} [/object])}
        [/unit]
        [unit]
            id,name,type=Somf,_"Uncle Somf",Bandit
            {MODIFICATIONS(
                {TRAIT_LOYAL}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () blue} )}
        [/unit]
        [unit]
            id,name,type=Moremirmu,_"Moremirmu",White Warrior
            {MODIFICATIONS(
                {TRAIT_LOYAL}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () white}
                [object] {EFFECT profile portrait="portraits/moremirmu.webp"} [/object])}
        [/unit]
        [unit]
            id,name,type=Dosh,_"Dosh",Troll
            {MODIFICATIONS(
                {TRAIT_LOYAL}{TRAIT_FEARLESS}
                {TEAM_COLOR_OVERRIDE () black} )}
        [/unit]
        
        # unset x,y defaults to recall list
        # now, take them all off the recall list and store them instead
        {MODIFY_UNIT (side,x,y=1,recall,recall {NOT id=Konrad}) side 2} # side 1 units don't get stored by {FIRE_EVENT store_npcs}
        {FIRE_EVENT store_npcs}
    [/event]
#enddef



#############################
# PORTRAITS
#############################
#define KONRAD_VARIATION NAME
    #
    image=portraits/konrad-$konrad_portrait_base-{NAME}.webp
#enddef
#define SWITCH_KONRAD_PORTRAIT NAME SCEPTRE
    {REMOVE_OBJECT konrad_portrait_object id=Konrad}
    # e.g. konrad-adult-sceptre.webp
    {GIVE_OBJECT_TO id=Konrad ({EFFECT profile portrait=portraits/konrad-{NAME}{SCEPTRE}.webp})}
    {VARIABLE konrad_portrait_base {NAME}}
#enddef

#define LISAR_VARIATION NAME
    #
    image=portraits/lisar-{NAME}.webp
#enddef

# Delfador has elvish variations, but they're currently unused
#define DELFADOR_VARIATION NAME
    #
    image=portraits/delfador-{NAME}.webp
#enddef

#define ASHEVIERE_VARIATION NAME
    #
    image=portraits/asheviere-{NAME}.webp
#enddef





















#######################################################################################################################################################
#                                                                   GLOBAL EVENTS
#######################################################################################################################################################
#define HERODEATH FLT MESSAGE
#arg DEFEAT
no#endarg
    [event]
        name=last breath
        {FILTER {FLT}}
        [message]
            {FLT}
            message={MESSAGE}
        [/message]
        {VARIABLE herodeath_defeat {DEFEAT}}
        [if] {VARIABLE_CONDITIONAL herodeath_defeat equals yes} {THEN(
            [endlevel]
                result=defeat
            [/endlevel]
        )} [/if]
        {CLEAR_VARIABLE herodeath_defeat}
    [/event]
#enddef

#define GLOBAL__HERODEATHS
    {HERODEATH id=Konrad       _"We are vanquished, for I have been defeated!"            DEFEAT=yes}
    {HERODEATH id=Delfador     _"This is the end! Without me, who will guide the prince?" DEFEAT=yes}
    {HERODEATH id=Kalenz       _"Nobody can cheat death forever..."                       DEFEAT=yes}
    {HERODEATH id=Moremirmu    _"Fight on without me, friends, for the Light shall always prevail!"}
    {HERODEATH id=Harper       _"Unngh... Sorry Baldras..."}
    {HERODEATH id=Ulfdain      _"Ah’m not wounded! Jus’ need a moment... ta catch my breath..."}
    {HERODEATH side,id=1,Dosh  _"Dosh don’ feel so good..."}
    
    {HERODEATH id=familiar     _"Krawww..."}
    {HERODEATH id=Galdrad      _"I have met my match..."}
    {HERODEATH id=Ethiliel     _"I have given all in defense of my home..."}
    [event]
        name=last breath
        [filter]
            id=Lisar
            [filter_side]
                [allied_with]
                    side=1
                [/allied_with]
            [/filter_side]
        [/filter]
        {FILTER_CONDITION({NOT( {HAVE_UNIT id=Iliah-Malal} )})} # we have a special death line/event for The Swamp of Dread, so don't use this default one
        [message]
            id=Lisar {LISAR_VARIATION defeat}
            message=_"I can’t believe it should end like this!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef
#define OBJECTIVES_HERODEATHS
    [objective]
        description= _ "Death of Konrad or Delfador"
        condition=lose 
        [show_if]{HAVE_UNIT id=Delfador}[/show_if]
    [/objective]
    [objective]
        description= _ "Death of Konrad"
        condition=lose
        [show_if]{NOT({HAVE_UNIT id=Delfador})}[/show_if]
    [/objective]
    # for scenarios with Delfador, remind the player that Delfador is a leader and can recruit
    [note]
        description= _ "Delfador is a leader, and can recruit when standing on a keep."
        [show_if]{HAVE_UNIT id,side=Delfador,1}[/show_if]
    [/note]
    [objective]
        description= _ "Death of Konrad or Delfador"
        condition=lose 
        [show_if]{HAVE_UNIT id=Delfador}[/show_if]
    [/objective]
    [objective]
        description= _ "Death of Konrad or Li’sar"
        condition=lose 
        [show_if]{HAVE_UNIT id=Delfador}[/show_if]
    [/objective]
#enddef













#######################################################################################################################################################
#                                                                    SMALLTALK
#######################################################################################################################################################
#define GLOBAL__SMALLTALK
    #############################
    # DELFADOR
    #############################
    [event]
        name=attack
        {FILTER id=Delfador}
        {FILTER_SECOND id=Lisar}
        {FILTER_CONDITION({VARIABLE_CONDITIONAL st_delfador_attacks_lisar not_equals yes})}
        [message]
            speaker,image=Delfador,portraits/delfador-mad.webp
            message= _ "You are as foolish as your brother, spawn of Asheviere!"
        [/message]
        {VARIABLE st_delfador_attacks_lisar yes}
    [/event]
    #############################
    # ULFDAIN
    #############################
    [event]
        name=attack {FILTER id=Ulfdain} {FILTER_SECOND trait=undead}
        [event]
            name=attack {FILTER id=Ulfdain} {FILTER_SECOND trait=undead}
            [event]
                name=attack {FILTER id=Ulfdain} {FILTER_SECOND( trait=undead {NOT type=Lich} {NOT type_adv_tree=Ghost} )}
                {FILTER_CONDITION({VARIABLE_CONDITIONAL st_ulfdain_undead not_equals yes})}
                [message]
                    speaker=Ulfdain
                    #po: stay in your graves, you 
                    message= _ "Stay in yer graves, ye rottin’ heaps o’ horse-breaker bones!"
                [/message]
                [event]
                    name=attack end
                    [message]
                        speaker=Ulfdain
                        #po: ah, insulting these dead ones is just no fun. They can't understand me...
                        message= _ "Ah, insultin’ these dead’uns is jus’ no fun. They cannae understand me..."
                    [/message]
                [/event]
                {VARIABLE st_ulfdain_undead yes}
            [/event]
        [/event]
    [/event]
    #############################
    # DOSH
    #############################
    [event]
        name=attack
        {FILTER id=Dosh}
        {FILTER_SECOND race=troll}
        {FILTER_CONDITION({VARIABLE_CONDITIONAL st_dosh_troll not_equals yes})}
        [message]
            speaker=Dosh
            message= _ "You a bad troll, bad! Bad trolls be getting hit with big sticks!"
        [/message]
        {VARIABLE st_dosh_troll yes}
    [/event]

#   smalltalk. Make this simple
#    have a bunch of "if X condition is met" lines, and prioritize those
#    otherwise have a bunch of lines, and pick one at random
#    and perhaps some "fallback" lines that only require Konrad, for times when you have no companion or have exhausted all your companion smalltalks
#    don't need anything fancier than that
#    remember that we're unlikely to get more than 3 smalltalks per character

# TODO - no smalltalk for harper if we're at the doors - she's sad because of Baldras
# TODO - Somf says that Harper never seemed like one for princes and authority

# smalltalk for Delfador:
# 	did you know my father?
# 	how did Asheviere get so powerful?
# 	discuss Baron Richard's death. Make Delfador seem less stupid for not helping to fight
# smalltalk for Kalenz:
# 	what exactly is Delfador doing? Kalenz says Delfador should explain - he's in the heart mountains. (only if bm_delfador_at_sceptre not_equals yes)
# 	why didn't you bring any elves with you? (elves no war, and easier to travel alone than with an army. Specify he came from Lintanir and met Delfador)
# 		A lone traveler can go where an army cannot, friend Konrad. Should we ever reach my homeland in the Lintanir, 
# 	Delfador and I first met in his youth, and we have become both allies and friends through our opposition against Asheviere.
# smalltalk for Harper:
# 	bigmap - special voicelines if you come near Dalben or Halstead
# ensure all companions have a death event, a recall event, and a FIND_COMPANION_AND_SAY macros
# smalltalk for Li'sar:
#   (only if Delfador is present) she and Delfador talk about Eldred. 
#       Prioritize this above other smalltalks!
#enddef
