#textdomain wesnoth-h2tt


#######################################################################################################################################################
#                                                                   UTILITY MACROS
#######################################################################################################################################################
#############################
# KONRAD SIDE
#############################
#define KONRAD_SIDE GOLD
#arg FOG
no#endarg
#arg SHROUD
no#endarg
#arg INCOME 
0#endarg # Jeniver's "transmutation" gold-giving ability assumes that Konrad's bonus income is 0 (base income is 2), so don't change this unless we know Jeniver isn't in the party (e.g. S24 Wesmere)
#arg VILLAGE_GOLD
1#endarg
    [side]
        side,controller,color=1,human,blue
        defeat_condition=never
        gold={GOLD}
        {SINGLEUNITWML_KONRAD}
        income,village_gold={INCOME},{VILLAGE_GOLD}
        team_name,user_team_name=konrad,_"Konrad and Allies"
        fog,shroud={FOG},{SHROUD}
        {FLAG_VARIANT long}
    [/side]
#enddef

#############################
# RECALL COMPANIONS
#############################
#define RECALL_KONRAD_AND_COMPANIONS X Y
    {RECALL_XY Konrad    {X} {Y}} {REDRAW}
    {RECALL_XY Delfador  {X} {Y}} {REDRAW}
    {RECALL_XY Kalenz    {X} {Y}} {REDRAW}
    
    {RECALL_XY Moremirmu {X} {Y}} {REDRAW}
    {RECALL_XY Harper    {X} {Y}} {REDRAW}
    {RECALL_XY Somf      {X} {Y}} {REDRAW}
    {RECALL_XY Jeniver   {X} {Y}} {REDRAW}
    
    {RECALL_XY Ulfdain   {X} {Y}} {REDRAW}
    {RECALL_XY Chantal   {X} {Y}} {REDRAW}
    {RECALL_XY Dosh      {X} {Y}} {REDRAW}
    
    {RECALL_XY familiar  {X} {Y}} {REDRAW} # might be too strong... we don't want Delfador's familiar to overshadow other bm_turns=1 options
#enddef

#############################
# NEW RECRUIT / COMPANION
#############################
#define NEW_RECRUIT1 RECRUITS MESSAGE IMAGE1
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(72,72)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)"}
#enddef
#define NEW_RECRUIT2 RECRUITS MESSAGE IMAGE1 IMAGE2
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(108,72)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)~BLIT(units/{IMAGE2}~RC(magenta>red),36,0)"}
#enddef
#define NEW_RECRUIT3 RECRUITS MESSAGE IMAGE1 IMAGE2 IMAGE3
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(108,108)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)~BLIT(units/{IMAGE2}~RC(magenta>red),36,0)~BLIT(units/{IMAGE3}~RC(magenta>red),18,48)"}
#enddef
#define NEW_RECRUIT4 RECRUITS MESSAGE IMAGE1 IMAGE2 IMAGE3 IMAGE4
    {_NEW_RECRUIT {RECRUITS} {MESSAGE} "misc/blank-hex.png~SCALE(108,108)~BLIT(units/{IMAGE1}~RC(magenta>red),0,0)~BLIT(units/{IMAGE2}~RC(magenta>red),36,0)~BLIT(units/{IMAGE3}~RC(magenta>red),0,48)~BLIT(units/{IMAGE4}~RC(magenta>red),36,48)"}
#enddef
#define _NEW_RECRUIT RECRUITS MESSAGE IMAGE_FULL_PATH
    [object]
        {FILTER id=Konrad} duration=turn
        image={IMAGE_FULL_PATH}
        name=_"New Recruits:"
        description={MESSAGE}
    [/object]
    [allow_extra_recruit]
        id=Konrad
        extra_recruit={RECRUITS}
    [/allow_extra_recruit]
#enddef





#######################################################################################################################################################
#                                                                FIND COMPANION AND SAY
#######################################################################################################################################################
#############################
# MAIN MACRO
#############################
# PRIORITY: e.g. "Delfador,Harper" - first we check Delfador, then we check Harper, then we check the other companions

#define FIND_COMPANION_AND_SAY
#arg PRIORITY
#endarg
#arg MESSAGE_DELFADOR
#endarg
#arg MESSAGE_KALENZ
#endarg
#arg MESSAGE_CHANTAL
#endarg
#arg MESSAGE_MOREMIRMU
#endarg
#arg MESSAGE_HARPER
#endarg
#arg MESSAGE_ULFDAIN
#endarg
#arg MESSAGE_JENIVER
#endarg
#arg MESSAGE_DOSH
#endarg
#arg FALLBACK_KONRAD
#endarg
    ############################
    # INITIALIZE SPEAKERS LIST
    #############################
    # use this list to track which companion last spoke, so we can spread lines around evenly
    # initialize this list once per campaign, and rotate through the companions each time one speaks
    # (don't check for "companion_speakers equals $null", because arrays seem to equal null even when they have contents)
    [if] {VARIABLE_CONDITIONAL companion_speakers.length equals 0} {THEN(
        [set_variables]
            name=companion_speakers
            [split]
                list="Delfador,Kalenz,Chantal,Moremirmu,Harper,Jeniver,Ulfdain,Dosh"
                key=id
                separator=","
                remove_empty=yes
            [/split]
        [/set_variables]
    )} [/if]
    
    #############################
    # PICK COMPANION AND SPEAK
    #############################
    # if we have {PRIORITY} set, load it into a variable
    {VARIABLE priority_companions {PRIORITY}}
    
    # copy the variable because we change it during the loop
    [set_variables]
        name=companion_speakers_copy
        to_variable=companion_speakers
    [/set_variables]
    {REPEAT 2 (
        # iterate in order of $companion_speakers, so that whoever spoke last time is the lowest-priority this time
        # this helps spread speech around, stops randomness from preventing undo, and ensures that players get the same messages if they reload a save
        [foreach]
            array=companion_speakers_copy
            variable=companion
            [do]
                #------------------------
                # PRIORITIZE
                #------------------------
                # if we have a list of priority companions, and this companion isn't on the list, move on
                [if]     {VARIABLE_CONDITIONAL priority_companions not_equals ""}
                    {NOT({VARIABLE_CONDITIONAL priority_companions contains $companion.id})}
                {THEN(
                    [continue]
                    [/continue]
                )} [/if]
                
                #------------------------
                # SELECT MESSAGE
                #------------------------
                # which macro argument corresponds to our chosen companion?
                {CLEAR_VARIABLE message}
                [if] {VARIABLE_CONDITIONAL companion.id equals Delfador } {THEN(  {VARIABLE message {MESSAGE_DELFADOR }}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Kalenz   } {THEN(  {VARIABLE message {MESSAGE_KALENZ   }}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Chantal  } {THEN(  {VARIABLE message {MESSAGE_CHANTAL  }}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Moremirmu} {THEN(  {VARIABLE message {MESSAGE_MOREMIRMU}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Harper   } {THEN(  {VARIABLE message {MESSAGE_HARPER   }}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Jeniver  } {THEN(  {VARIABLE message {MESSAGE_JENIVER  }}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Ulfdain  } {THEN(  {VARIABLE message {MESSAGE_ULFDAIN  }}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Dosh     } {THEN(  {VARIABLE message {MESSAGE_DOSH     }}  )} [/if]
                
                #------------------------
                # SAY MESSAGE
                #------------------------
                # if we have a living matching companion AND a non-blank message for them to speak, speak
                [if]{HAVE_UNIT side,id=1,$companion.id}
                    {VARIABLE_CONDITIONAL message not_equals ""}
                {THEN(
                    [message]
                        speaker=$companion.id
                        message=$message
                    [/message]
                    {VARIABLE companion_already_spoke yes}
                    
                    # shuffle the speaker to the back of the list, then break
                    {CLEAR_VARIABLE companion_speakers[$i]}
                    [set_variables]
                        name=companion_speakers
                        mode=append
                        to_variable=companion
                    [/set_variables]
                    [break][/break]
                )} [/if]
            [/do]
        [/foreach]
        
        # after our first loop, clear priority_companions (if it existed), and possibly try again
        # if priority_companions already doesn't exist, give up and stop looping
        [if] {VARIABLE_CONDITIONAL priority_companions not_equals ""} {THEN(
            {CLEAR_VARIABLE priority_companions}
        )} {ELSE(
            [break][/break]
        )} [/if]
        
        # if our companion already spoke, break out of the loop
        [if] {VARIABLE_CONDITIONAL companion_already_spoke equals yes} {THEN(
            [break][/break]
        )} [/if]
    )}
    {CLEAR_VARIABLE message,companion_speakers_copy}
    
    #############################
    # NO COMPANION
    #############################
    # if nobody has spoken, fall back to Konrad
    {VARIABLE message {FALLBACK_KONRAD}}
    [if]
        {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes}
        {VARIABLE_CONDITIONAL message not_equals ""}
    {THEN(
        [message]
            speaker=Konrad
            message=$message
        [/message]
    )} [/if]
    {CLEAR_VARIABLE message,companion_already_spoke}
#enddef






















#######################################################################################################################################################
#                                                                CHARACTER DEFINITIONS
#######################################################################################################################################################
#############################
# NPC STORING / UNSTORING
#############################
# to ensure we never duplicate NPCs, and to keep the XP/stats on NPCs consistent, don't spawn them directly
# instead, create them once at the beginning of the campaign, and store/unstore them as needed
#define STORE_NPC ID
#arg KILL
yes#endarg
#arg NOT_SIDE # by default don't store units that're on side 1; trust the regular recall system to handle them
1#endarg
    [if] {HAVE_LOCATION({FILTER( id={ID} {NOT side={NOT_SIDE}} )})} # can't rely solely on {HAVE_UNIT}, because that ignores units with 0 or less HP
     {OR({HAVE_UNIT( id,search_recall_list={ID},yes {NOT side={NOT_SIDE}} )} )}
    {THEN(
        {MODIFY_UNIT id={ID} status.poisoned no}
        {MODIFY_UNIT id={ID} status.slowed   no}
        [store_unit]
            {FILTER id={ID}}
            variable,kill=stored_{ID},{KILL}
        [/store_unit]
        {VARIABLE stored_{ID}.hitpoints $stored_{ID}.max_hitpoints}
        {VARIABLE stored_{ID}.moves     $stored_{ID}.max_moves    }
        {VARIABLE stored_{ID}.attacks_left 1}
    )} [/if]
#enddef
#define UNSTORE_NPC ID KEYS MODS
    # if unit exists, remove them
    {STORE_NPC {ID} NOT_SIDE=999} # store the NPC even if they're on side 1
    
    # if the side is invalid when we unstore, we get an error (before [modify_unit] can change the side). Therefore, make all stored units side 1 by default
    {VARIABLE stored_{ID}.side 1}
    
    # unstore them
    [unstore_unit]
        variable=stored_{ID}
        find_vacant=yes # by default; can be overriden in {KEYS}
        {KEYS}
    [/unstore_unit]
    [modify_unit]
        {FILTER id={ID}}
        {MODS}
    [/modify_unit]
#enddef
#define GLOBAL__AUTOSTORE_NPCs
    [event]
        name=victory,store_npcs
        first_time_only=no
        priority=-999 # after every event, including those that might involve NPCs
        
        # friendly NPCs
        {STORE_NPC Delfador}
        {STORE_NPC Kaylan}
        {STORE_NPC Maddock}
        {STORE_NPC Reglok}
        {STORE_NPC Ethiliel}
        {STORE_NPC Galdrad}
        
        # enemy NPCs
        {STORE_NPC Lisar}
        {STORE_NPC Isolde}
        {STORE_NPC Mirya}
        {STORE_NPC Warven}
        {STORE_NPC Asheviere}
        
        # companions
        {STORE_NPC Kalenz}
        {STORE_NPC Chantal}
        {STORE_NPC Ulfdain}
        {STORE_NPC Harper}
        {STORE_NPC Somf}
        {STORE_NPC Moremirmu}
        {STORE_NPC Jeniver}
        {STORE_NPC Dosh}
    [/event]
#enddef

#############################
# DEFINE NPCS
#############################
# loyal, but for units who're also leaders
# (the regular loyal trait causes visual glitches)
#define TRAIT_LOYAL_DUMMY
    [trait]
        id,name=loyal_dummy,_"loyal"
        description= _ "Zero upkeep"
        {EFFECT loyal ()}
    [/trait]
#enddef

#define SINGLEUNITWML_KONRAD
    id,name,type=Konrad,_"Konrad",Fighter
    {MODIFICATIONS({TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT})}
    canrecruit=yes
#enddef

#define GLOBAL__INITIAL_NPC_SPAWN
    [event]
        name=spawn_npcs # this should only ever be called once (in S01), but we make it a global event for debug purposes
        #------------------------
        # ALLY NPCS
        #------------------------
        [unit]
            id,name,type=Delfador,_"Delfador",Delfador
            [modifications]
                {TRAIT_LOYAL_DUMMY}{TRAIT_AGED}
                {TEAM_COLOR_OVERRIDE () purple}
                [object] {EFFECT profile portrait="portraits/delfador.webp"} [/object]
            [/modifications]
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Kaylan,_"Sir Kaylan",Grand Knight
            [modifications]
                {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () green}
                [object] {EFFECT profile portrait="portraits/humans/grand-knight-2.webp"} [/object]
            [/modifications]
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Maddock,_"Lord Maddock",Lord of Elensefar
            [modifications]
                {TRAIT_INTELLIGENT} {TRAIT_RESILIENT}
                {TEAM_COLOR_OVERRIDE () blue}
                [object] {EFFECT profile portrait="portraits/maddock.webp"} [/object]
            [/modifications]
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Reglok,_"Reglok",Rogue
            [modifications]
                {TRAIT_LOYAL_DUMMY} {TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () teal}
            [/modifications]
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Ethiliel,_"Ethiliel",Elvish Shyde
            [modifications]
                {TRAIT_LOYAL_DUMMY}{TRAIT_RESILIENT}
                {TEAM_COLOR_OVERRIDE () brightgreen} 
                [object] {EFFECT profile portrait="portraits/ethiliel.webp"} [/object]
            [/modifications]
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type=Galdrad,_"Galdrad",Elvish Champion
            [modifications]
                {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () brightgreen}
            [/modifications]
            canrecruit=yes
        [/unit]
        
        #------------------------
        # ENEMY NPCS
        #------------------------
        [unit]
            id,name,type,gender=Lisar,_"Li'sar",Princess,female
            profile=portraits/lisar.webp
            [modifications]
                {TRAIT_LOYAL_DUMMY}{TRAIT_FEARLESS}
                {TEAM_COLOR_OVERRIDE () lisarcolor}
            [/modifications]
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type,gender=Isolde,_"Isolde",General,female
            profile=portraits/isolde-old.png
            [modifications]
                {TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT}
                {TEAM_COLOR_OVERRIDE () wesred}
            [/modifications]
            canrecruit=yes
        [/unit]
        [unit]
            id,name,type,gender=Mirya,_"Mirya",Silver Mage,female
            [modifications]
                {TRAIT_LOYAL}{TRAIT_QUICK}
                {TEAM_COLOR_OVERRIDE () wesred}
            [/modifications]
        [/unit]
        [unit]
            id,name,type=Warven,_"Warven",Lieutenant
            [modifications]
                {TRAIT_LOYAL}{TRAIT_RESILIENT}
                {TEAM_COLOR_OVERRIDE () wesred}
            [/modifications]
            canrecruit=yes
        [/unit]
        
        #------------------------
        # COMPANIONS
        #------------------------
        [unit]
            id,name,type=Kalenz,_"Kalenz",Elvish High Lord
            [modifications]
                {TRAIT_LOYAL} {TRAIT_AGED}
                {TEAM_COLOR_OVERRIDE () green}
                [object] {EFFECT profile portrait="portraits/kalenz.webp"} [/object]
            [/modifications]
        [/unit]
        [unit]
            id,name,type=Chantal,_"Chantal",Elvish Shyde
            [modifications]
                {TRAIT_LOYAL} {TRAIT_INTELLIGENT}
                {TEAM_COLOR_OVERRIDE () brightgreen}
                [object] {EFFECT profile portrait="portraits/chantal-shyde.webp"} [/object]
            [/modifications]
        [/unit]
        [unit]
            id,name,type=Ulfdain,_"Ulfdain",Dwarvish Ulfserker
            [modifications]
                {TRAIT_LOYAL}{TRAIT_HEALTHY}
                {TEAM_COLOR_OVERRIDE () brown}
            [/modifications]
        [/unit]
        [unit]
            id,name,type,gender=Harper,_"Harper",Fugitive,female
            [modifications]
                {TRAIT_LOYAL}{TRAIT_RESILIENT}
                [object] {EFFECT attack range,increase_damage=ranged,1} [/object] # mimic the backpack object that harper can pick up in Liberty
                [object] {EFFECT profile portrait="portraits/harper-old.webp"} [/object]
            [/modifications]
        [/unit]
        [unit]
            id,name,type=Somf,_"Uncle Somf",Bandit
            [modifications]
                {TRAIT_LOYAL}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () blue}
            [/modifications]
        [/unit]
        [unit]
            id,name,type=Moremirmu,_"Moremirmu",White Warrior
            [modifications]
                {TRAIT_LOYAL}{TRAIT_STRONG}
                {TEAM_COLOR_OVERRIDE () white}
                [object] {EFFECT profile portrait="portraits/moremirmu.webp"} [/object]
            [/modifications]
        [/unit]
        [unit]
            id,name,type=Jeniver,_"Jeniver",Alchemist
            [modifications]
                {TRAIT_LOYAL}{TRAIT_INTELLIGENT}
                {TEAM_COLOR_OVERRIDE () gold}
            [/modifications]
        [/unit]
        [unit]
            id,name,type=Dosh,_"Dosh",Troll
            [modifications]
                {TRAIT_LOYAL}{TRAIT_FEARLESS}
                {TEAM_COLOR_OVERRIDE () black}
            [/modifications]
            canrecruit=yes
        [/unit]
        
        # unset x,y defaults to recall list
        # now, take them all off the recall list and store them instead
        {MODIFY_UNIT (side,x,y=1,recall,recall {NOT id=Konrad}) side 2} # side 1 units don't get stored by {FIRE_EVENT store_npcs}
        {FIRE_EVENT store_npcs}
    [/event]
#enddef



#############################
# PORTRAITS
#############################
#define KONRAD_VARIATION NAME
    #
    image=portraits/konrad-$konrad_portrait_base-{NAME}.webp
#enddef
#define SWITCH_KONRAD_PORTRAIT NAME SCEPTRE
    {REMOVE_OBJECT konrad_portrait_object id=Konrad}
    # e.g. konrad-adult-sceptre.webp
    {GIVE_OBJECT_TO id=Konrad (id=konrad_portrait_object {EFFECT profile portrait=portraits/konrad-{NAME}{SCEPTRE}.webp})}
    {VARIABLE konrad_portrait_base {NAME}}
#enddef

#define LISAR_VARIATION NAME
    #
    image=portraits/lisar-{NAME}.webp
#enddef

# Delfador has elvish variations, but they're currently unused
#define DELFADOR_VARIATION NAME
    #
    image=portraits/delfador-{NAME}.webp
#enddef

#define ASHEVIERE_VARIATION NAME
    #
    image=portraits/asheviere-{NAME}.webp
#enddef





















#######################################################################################################################################################
#                                                                   GLOBAL EVENTS
#######################################################################################################################################################
#define HERODEATH ID FLT MESSAGE
#arg DEFEAT
no#endarg
#arg FLT2
id=fake_id_no_unit_should_match_this#endarg
#arg MESSAGE2
""#endarg
    [event]
        name=last breath
        id=herodeath_{ID}
        {FILTER {FLT}}
        [message]
            {FLT}
            message={MESSAGE}
        [/message]
        
        [event]
            name=die
            [message]
                {FLT2}
                message={MESSAGE2}
            [/message]
        [/event]
        
        {VARIABLE herodeath_defeat {DEFEAT}}
        [if] {VARIABLE_CONDITIONAL herodeath_defeat equals yes} {THEN(
            [endlevel]
                result=defeat
            [/endlevel]
        )} [/if]
        {CLEAR_VARIABLE herodeath_defeat}
    [/event]
#enddef

#############################
# HERODEATH EVENTS
#############################
#define GLOBAL__HERODEATHS
    {HERODEATH Konrad    id=Konrad      _"We are vanquished, for I have been defeated!"            DEFEAT=yes}
    {HERODEATH Delfador  id=Delfador    _"This is the end! Without me, who will guide the prince?" DEFEAT=yes}
    {HERODEATH Moremirmu id=Moremirmu   _"Fight on without me, friends, for the Light shall always prevail!"}
    {HERODEATH Ulfdain   id=Ulfdain     _"Ah’m not wounded! Jus’ need a moment... ta catch my breath..."}
    {HERODEATH Jeniver   id=Jeniver     _"Well, this is a new experience..."}
    {HERODEATH Harper    id=Harper      _"Unngh... Sorry Baldras..." (FLT2=id=Somf  ) (MESSAGE2=_"Harper! No!"    )}
    {HERODEATH Somf      id=Somf        _"Ack! I tried my best..."   (FLT2=id=Harper) (MESSAGE2=_"Uncle Somf! No!")}
    {HERODEATH Chantal   id=Chantal     _"—Oh!"                      (FLT2=id=Kalenz) (MESSAGE2=_"Chantal! A dark shadow falls upon my soul...")}
    {HERODEATH Dosh      side,id=1,Dosh _"Dosh don’ feel so good..."}
    {HERODEATH Jotha     id=Jotha       _"Jotha regrets nothing..."}
    {HERODEATH Merle     id=Merle       _"Bury me back home in the Dulatus..."}
    
    {HERODEATH familiar  id=familiar    _"Krawww..."}
    {HERODEATH Galdrad   id=Galdrad     _"I have met my match..."}
    {HERODEATH Ethiliel  id=Ethiliel    _"I have given all in defense of my home..."}
    
    # Kalenz death event
    # don't make Kalenz's death a lose condition. Instead, have him flee to the Lintanir if reduced to 0 hp
    [event]
        name=last breath
        id=herodeath_Kalenz
        {FILTER id=Kalenz}
        [message]
            speaker=Kalenz
            message=_"Argh! I am nearly finished! But if I were to die here, my people would be left leaderless."
        [/message]
        [message]
            speaker=Kalenz
            message=_"I have aided you in what ways I could, Konrad. Now I must leave your party, and retreat eastwards to Lintanir forest. May we someday meet again there."
        [/message]
        {STORE_NPC Kalenz}
        
        # Kalenz is mandatory for this scenario. If Konrad doesn't have him in the party, don't let the player play this scenario
        [if] {VARIABLE_CONDITIONAL status_s24 not_equals completed} {THEN(
            {VARIABLE status_s24 failed}
        )} [/if]
    [/event]
    
    # Lisar death event
    [event]
        name=last breath
        id=herodeath_Lisar
        {FILTER( id=Lisar {IS_ALLY} )}
        [message]
            id=Lisar {LISAR_VARIATION defeat}
            message=_"I can’t believe it should end like this!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef

#############################
# GLOBAL OBJECTIVES
#############################
#define OBJECTIVES_HERODEATHS
    # required for the S31 "Poor Communications" counter
    delayed_variable_substitution=yes
    
    #------------------------
    # HERODEATH OBJECTIVES
    #------------------------
    [objective]
        description= _ "Death of Konrad"
        condition=lose
        [show_if]
            {NOT({HAVE_UNIT( id=Delfador )})}
            {NOT({HAVE_UNIT( id=Lisar {IS_ALLY} )})}
        [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Konrad or Delfador"
        condition=lose 
        [show_if]
            {HAVE_UNIT id=Delfador}
            {NOT({HAVE_UNIT( id=Lisar {IS_ALLY} )})}
        [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Konrad or Li’sar"
        condition=lose 
        [show_if]
            {HAVE_UNIT( id=Lisar {IS_ALLY} )}
            {NOT({HAVE_UNIT( id=Delfador )})}
        [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Konrad, Delfador, or Li’sar"
        condition=lose 
        [show_if]
            {HAVE_UNIT( id=Delfador )}
            {HAVE_UNIT( id=Lisar {IS_ALLY} )}
        [/show_if]
    [/objective]
    
    
    #------------------------
    # DELFADOR LEADER REMINDER
    #------------------------
    # in just the first bigmap scenario (probably Flight, Blackwater, or Pearls), remind the player that Delfador is their leader
    [note]
        description= _ "Delfador is a leader, and can recruit when standing on a keep."
        [show_if]
            {HAVE_UNIT id,side=Delfador,1}
            {VARIABLE_CONDITIONAL bm_turns equals 1} 
        [/show_if]
    [/note]
    
    
    #------------------------
    # EXPLAIN MALADY
    #------------------------
    [note]
        description=$s31_malady_title + ": " + $s31_malady_description
        [show_if]
            {VARIABLE_CONDITIONAL status_s31 equals completed}
            {VARIABLE_CONDITIONAL s31_malady not_equals limited_commands}
            {VARIABLE_CONDITIONAL s31_malady not_equals none}
        [/show_if]
    [/note]
    [note]
        description=$s31_malady_title + ": " + $s31_malady_description + " " + _"($commands_issued_this_turn so far)"
        [show_if]
            {VARIABLE_CONDITIONAL status_s31 equals completed}
            {VARIABLE_CONDITIONAL s31_malady equals limited_commands}
        [/show_if]
    [/note]
#enddef






