#textdomain wesnoth-h2tt


#######################################################################################################################################################
#                                                                   UTILITY MACROS
#######################################################################################################################################################
#############################
# KONRAD SIDE
#############################
#define KONRAD_SIDE GOLD
#arg FOG
no#endarg
#arg SHROUD
no#endarg
    [side]
        side,controller,color=1,human,red
        defeat_condition,gold=never,{GOLD}
        {SINGLEUNITWML_KONRAD}
        team_name,user_team_name=konrad,_"Konradâ€™s Forces"
        fog,shroud={FOG},{SHROUD}
        {FLAG_VARIANT long}
    [/side]
#enddef

#############################
# RECALL COMPANIONS
#############################
#define RECALL_KONRAD_AND_COMPANIONS X Y
    {RECALL_XY Konrad    {X} {Y}}
    {RECALL_XY Delfador  {X} {Y}}
    {RECALL_XY Kalenz    {X} {Y}}
    {RECALL_XY Moremirmu {X} {Y}}
    {RECALL_XY Harper    {X} {Y}}
    {RECALL_XY Ulfdain   {X} {Y}}
    {RECALL_XY Chantal   {X} {Y}}
    {RECALL_XY Ghupue    {X} {Y}}
    {RECALL_XY Elrian    {X} {Y}}
#enddef

#############################
# NEW RECRUIT / COMPANION
#############################
#define NEW_RECRUIT RECRUITS IMAGE MESSAGE
    [object]
        {FILTER id=Konrad} duration=turn
        image="misc/blank-hex.png~SCALE(72,72)~BLIT(units/{IMAGE}~RC(magenta>red),0,0)"
        name=_"New Recruits:"
        description={MESSAGE}
    [/object]
    [allow_extra_recruit]
        id=Konrad
        extra_recruit={RECRUITS}
    [/allow_extra_recruit]
#enddef
#define NEW_COMPANION IMAGE MESSAGE
    [object]
        {FILTER id=Konrad} duration=turn
        image="misc/blank-hex.png~SCALE(72,72)~BLIT(units/{IMAGE}~RC(magenta>red),0,0)"
        name=_"New Companion:"
        description={MESSAGE}
    [/object]
#enddef






#######################################################################################################################################################
#                                                                FIND COMPANION AND SAY
#######################################################################################################################################################
#define SPEAK ID MESSAGE_SPEAKER MESSAGE_GENERIC
    # if we have a custom message, say that one
    {VARIABLE message {MESSAGE_SPEAKER}}
    [if]{HAVE_UNIT side,id=1,{ID}}
        {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes}
        {VARIABLE_CONDITIONAL message not_equals none}
    {THEN(
        [message]
            speaker={ID}
            message=$message
        [/message]
        {VARIABLE companion_already_spoke yes}
    )} [/if]
    
    # if we have a generic message, fall back to that one
    {VARIABLE message {MESSAGE_GENERIC}}
    [if]{HAVE_UNIT side,id=1,{ID}}
        {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes}
        {VARIABLE_CONDITIONAL message not_equals none}
    {THEN(
        [message]
            speaker={ID}
            message=$message
        [/message]
        {VARIABLE companion_already_spoke yes}
    )} [/if]
#enddef

#############################
# MAIN MACRO
#############################
# Priority: e.g. "Delfador,Harper" - first we check Delfador, then we check Harper, then we randomly check the other companions
# message_generic: if not provided, we'll only speak if one of the specific companions matches

#define FIND_COMPANION_AND_SAY
#arg PRIORITY
none#endarg
#arg MESSAGE_GENERIC
none#endarg
#arg MESSAGE_DELFADOR
none#endarg
#arg MESSAGE_MOREMIRMU
none#endarg
#arg MESSAGE_HARPER
none#endarg
#arg MESSAGE_ULFDAIN
none#endarg
#arg MESSAGE_KALENZ
none#endarg
#arg MESSAGE_CHANTAL
none#endarg
#arg FALLBACK_KONRAD
none#endarg
    #############################
    # PRIORITIZE SPEAKER
    #############################
    {VARIABLE companions {PRIORITY}}
    [if] {VARIABLE_CONDITIONAL companions not_equals none} {THEN(
        [set_variables]
            name,moda=companions,replace
            [split]
                list,key=$companions,id # e.g. $companions[$i].id
                separator,remove_empty=",",yes
            [/split]
        [/set_variables]
        [foreach]
            array=companions
            variable=companion # e.g. $companion.id
            [do]
                [if] {VARIABLE_CONDITIONAL companion.id equals Delfador } {THEN(  {SPEAK $companion.id {MESSAGE_DELFADOR } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Moremirmu} {THEN(  {SPEAK $companion.id {MESSAGE_MOREMIRMU} {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Harper   } {THEN(  {SPEAK $companion.id {MESSAGE_HARPER   } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Ulfdain  } {THEN(  {SPEAK $companion.id {MESSAGE_ULFDAIN  } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Kalenz   } {THEN(  {SPEAK $companion.id {MESSAGE_KALENZ   } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Chantal  } {THEN(  {SPEAK $companion.id {MESSAGE_CHANTAL  } {MESSAGE_GENERIC}}  )} [/if]
            [/do]
        [/foreach]
    )} [/if]
    
    #############################
    # RANDOMLY PICK SPEAKER
    #############################
    # randomly try a bunch of different speakers, in lieu of a proper array shuffle
    {VARIABLE companions "Delfador,Moremirmu,Harper,Ulfdain,Kalenz,Chantal"}
    
    # first prefer speaking on whichever companion has a custom message
    {REPEAT 50 (
        {VARIABLE_OP companion rand $companions}
        [if] {VARIABLE_CONDITIONAL companion equals Delfador } {THEN(  {SPEAK $companion {MESSAGE_DELFADOR } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Moremirmu} {THEN(  {SPEAK $companion {MESSAGE_MOREMIRMU} ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Harper   } {THEN(  {SPEAK $companion {MESSAGE_HARPER   } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Ulfdain  } {THEN(  {SPEAK $companion {MESSAGE_ULFDAIN  } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Kalenz   } {THEN(  {SPEAK $companion {MESSAGE_KALENZ   } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Chantal  } {THEN(  {SPEAK $companion {MESSAGE_CHANTAL  } ""}  )} [/if]
    )}
    
    # otherwise fall back to the generic message
    {REPEAT 50 (
        {VARIABLE_OP companion rand $companions}
        [if] {VARIABLE_CONDITIONAL companion equals Delfador } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Moremirmu} {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Harper   } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Ulfdain  } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Kalenz   } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Chantal  } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
    )}
    
    #############################
    # NO COMPANION
    #############################
    # konrad fallback - have konrad speak
    [if] {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes} {THEN(
        {SPEAK Konrad {FALLBACK_KONRAD} ""}
    )} [/if]
    
    # no konrad fallback specified - pick a high-level unit
    [if] {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes} {THEN(
        {CLEAR_VARIABLE speaker_id}
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,3-99 {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,2    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,1    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,0    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  id=Konrad                          ) id speaker_id})} [/if]
        {SPEAK $speaker_id "" {MESSAGE_GENERIC}}
    )} [/if]
    {CLEAR_VARIABLE companion,companions,message,companion_already_spoke,speaker_id}
#enddef






















#######################################################################################################################################################
#                                                                CHARACTER DEFINITIONS
#######################################################################################################################################################
#############################
# NPC STORING / UNSTORING
#############################
# to ensure we never duplicate NPCs, and to keep the XP/stats on NPCs consistent, don't spawn them directly
# instead, create them once at the beginning of the campaign, and store/unstore them as needed
#define STORE_NPC ID
#arg KILL
yes#endarg
    [if] {HAVE_UNIT id,search_recall_list={ID},yes} {THEN(
        {MODIFY_UNIT id={ID} status.poisoned no}
        {MODIFY_UNIT id={ID} status.slowed   no}
        [store_unit]
            {FILTER id={ID}}
            variable,kill=stored_{ID},{KILL}
        [/store_unit]
        {VARIABLE stored_{ID}.hitpoints $stored_{ID}.max_hitpoints}
        {VARIABLE stored_{ID}.moves     $stored_{ID}.max_moves    }
        {VARIABLE stored_{ID}.attacks_left 1}
    )} [/if]
#enddef
#define UNSTORE_NPC ID KEYS MODS
    # if unit exists, remove them
    {STORE_NPC {ID}}
    
    # unstore them
    [unstore_unit]
        variable=stored_{ID}
        find_vacant=yes # by default; can be overriden in {KEYS}
        {KEYS}
    [/unstore_unit]
    [modify_unit]
        {FILTER id={ID}}
        {MODS}
    [/modify_unit]
#enddef
#define GLOBAL__AUTOSTORE_NPCs
    [event]
        name=victory,store_npcs
        first_time_only=no
        priority=-999 # after every event, including those that might involve NPCs
        {STORE_NPC Delfador}
        {STORE_NPC Kaylan}
        {STORE_NPC Ethiliel}
        {STORE_NPC Galdrad}
        {STORE_NPC Maddock}
        
        {STORE_NPC Lisar}
        {STORE_NPC Isolde}
        {STORE_NPC Asheviere}
    [/event]
#enddef

#############################
# DEFINE NPCS
#############################
# loyal, but for units who're also leaders
# (the regular loyal trait causes visual glitches)
#define TRAIT_LOYAL_DUMMY
    [trait]
        id,name=loyal_dummy,_"loyal"
        description= _ "Zero upkeep"
        {EFFECT loyal ()}
    [/trait]
#enddef

#define INITIAL_NPC_SPAWN 
    #------------------------
    # ALLY NPCS
    #------------------------
    [unit]
        id,name,type=Delfador,_"Delfador",Delfador
        {MODIFICATIONS(
            {TRAIT_LOYAL_DUMMY}{TRAIT_AGED}
            {TEAM_COLOR_OVERRIDE () purple} )}
        canrecruit=yes
    [/unit]
    [unit]
        id,name,type=Kaylan,_"Sir Kaylan",Grand Knight
        {MODIFICATIONS(
            {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
            {TEAM_COLOR_OVERRIDE () green}
            [object] {EFFECT profile portrait="portraits/humans/grand-knight-2.webp"} [/object])}
        canrecruit=yes
    [/unit]
    [unit]
        id,name,type=Maddock,_"Lord Maddock",Lord of Elensefar
        {MODIFICATIONS(
            {TRAIT_INTELLIGENT} {TRAIT_RESILIENT}
            {TEAM_COLOR_OVERRIDE () blue}
            [object] {EFFECT profile portrait="portraits/maddock.webp"} [/object])}
        canrecruit=yes
    [/unit]
    [unit]
        id,name,type=Ethiliel,_"Ethiliel",Elvish Shyde
        {MODIFICATIONS(
            {TRAIT_LOYAL_DUMMY}{TRAIT_RESILIENT}
            {TEAM_COLOR_OVERRIDE () brightgreen} 
            [object] {EFFECT profile portrait="portraits/ethiliel.webp"} [/object])}
        canrecruit=yes
    [/unit]
    [unit]
        id,name,type=Galdrad,_"Galdrad",Elvish Champion
        {MODIFICATIONS(
            {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
            {TEAM_COLOR_OVERRIDE () brightgreen}
            [object] {EFFECT profile portrait="portraits/ethiliel.webp"} [/object])}
        canrecruit=yes
    [/unit]
    
    #------------------------
    # ENEMY NPCS
    #------------------------
    [unit]
        id,name,type=Lisar,_"Li'sar",Princess
        profile=portraits/lisar.webp
        {MODIFICATIONS(
            {TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT}
            {TEAM_COLOR_OVERRIDE () purple} )}
        canrecruit=yes
    [/unit]
    [unit]
        id,name,type=Isolde,_"Isolde",General
        profile=portraits/isolde-old.png
        {MODIFICATIONS(
            {TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT}
            {TEAM_COLOR_OVERRIDE () purple} )}
        canrecruit=yes
    [/unit]
    
    # unset x,y defaults to recall list
    # now, take them all off the recall list and store them instead
    {FIRE_EVENT store_npcs}
#enddef


#############################
# PLAYER UNITS
#############################
# these units remain under permanent player control.
# therefore, we use the standard recall list system to keep their stats consistent
#define SINGLEUNITWML_KONRAD
    id,name,type=Konrad,_"Konrad",Fighter
    {MODIFICATIONS(
        {TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT}
        [object] {EFFECT profile portrait="portraits/konrad-elvish.webp"} [/object])}
    canrecruit=yes
    side=1
#enddef
#define SINGLEUNITWML_ULFDAIN
    id,name,type=Ulfdain,_"Ulfdain",Dwarvish Ulfserker
    {MODIFICATIONS(
        {TRAIT_LOYAL}{TRAIT_HEALTHY}
        {TEAM_COLOR_OVERRIDE () brown} )}
#enddef
#define SINGLEUNITWML_MOREMIRMU
    id,name,type=Moremirmu,_"Moremirmu",White Warrior
    {MODIFICATIONS(
        {TRAIT_LOYAL}{TRAIT_STRONG}
        {TEAM_COLOR_OVERRIDE () white}
        [object] {EFFECT profile portrait="portraits/moremirmu.webp"} [/object])}
#enddef


#############################
# PORTRAITS
#############################
#define KONRAD_VARIATION NAME
    #
    image=portraits/konrad-human-{NAME}.webp
#enddef

#define KONRAD_VARIATION_ELF NAME
    #
    image=portraits/konrad-elvish-{NAME}.webp
#enddef

#define DELFADOR_VARIATION NAME
    #
    image=portraits/delfador-{NAME}.webp
#enddef

#define DELFADOR_VARIATION_ELF NAME
    #
    image=portraits/delfador-elvish-{NAME}.webp
#enddef

#define DELFADOR_MENTORING
    #
    image=portraits/delfador-mentoring.webp
#enddef

#define DELFADOR_MENTORING_ELF
    #
    image=portraits/delfador-elvish-mentoring.webp
#enddef

#define LISAR_VARIATION NAME
    #
    image=portraits/lisar-{NAME}.webp
#enddef

#define ASHEVIERE_VARIATION NAME
    #
    image=portraits/asheviere-{NAME}.webp
#enddef





















#######################################################################################################################################################
#                                                                   GLOBAL EVENTS
#######################################################################################################################################################
#define HERODEATH FLT MESSAGE
#arg DEFEAT
no#endarg
    [event]
        name=last breath
        {FILTER {FLT}}
        [message]
            {FLT}
            message={MESSAGE}
        [/message]
        {VARIABLE herodeath_defeat {DEFEAT}}
        [if] {VARIABLE_CONDITIONAL herodeath_defeat equals yes} {THEN(
            [endlevel]
                result=defeat
            [/endlevel]
        )} [/if]
        {CLEAR_VARIABLE herodeath_defeat}
    [/event]
#enddef

#define GLOBAL__HERODEATHS
    {HERODEATH id=Konrad       _"We are vanquished, for I have been defeated!"            DEFEAT=yes}
    {HERODEATH id=Delfador     _"This is the end! Without me, who will guide the prince?" DEFEAT=yes}
    {HERODEATH side,id=1,Lisar _"I canâ€™t believe it should end like this!"                DEFEAT=yes}
    {HERODEATH id=Moremirmu    _"Fight on without me, friends, for the Light shall always prevail!"}
    {HERODEATH id=Harper       _"Unngh... Sorry Baldras..."}
    {HERODEATH id=Ulfdain      _"Ahâ€™m not wounded! Jusâ€™ need a moment... ta catch my breath..."}
    {HERODEATH id=Kalenz       _"Nobody can cheat death forever..."}
    {HERODEATH id=familiar     _"Krawww..."}
#enddef
#define OBJECTIVES_HERODEATHS
    [objective]
        description= _ "Death of Konrad or Delfador"
        condition=lose {BR}[show_if]{HAVE_UNIT id=Delfador}[/show_if]
    [/objective]
    [objective]
        description= _ "Death of Konrad"
        condition=lose {BR}[show_if]{NOT({HAVE_UNIT id=Delfador})}[/show_if]
    [/objective]
#enddef













#######################################################################################################################################################
#                                                                    SMALLTALK
#######################################################################################################################################################
#define GLOBAL__SMALLTALK
    #############################
    # ALLARIL
    #############################
    [event]
        name=attack {FILTER id=Allaril} {FILTER_SECOND trait=undead}
        [event]
            name=attack {FILTER id=Allaril} {FILTER_SECOND trait=undead}
            [event]
                name=attack {FILTER id=Allaril} {FILTER_SECOND( trait=undead {NOT type=Lich} {NOT type_adv_tree=Ghost} )}
                [message]
                    speaker=Allaril
                    #po: stay in your graves, you 
                    message= _ "Stay in yer graves, ye rottinâ€™ heaps oâ€™ horse-breaker bones!"
                [/message]
                [event]
                    name=attack end
                    [message]
                        speaker=Allaril
                        #po: ah, insulting these dead ones is just no fun. They can't understand me...
                        message= _ "Ah, insultinâ€™ these deadâ€™uns is jusâ€™ no fun. They cannae understand me..."
                    [/message]
                [/event]
            [/event]
        [/event]
    [/event]
#enddef
