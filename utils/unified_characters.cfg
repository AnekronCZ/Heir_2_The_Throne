#textdomain wesnoth-h2tt


#######################################################################################################################################################
#                                                                   UTILITY MACROS
#######################################################################################################################################################
#define KONRAD_SIDE GOLD
#arg FOG
no#endarg
#arg SHROUD
no#endarg
    [side]
        side,controller,color=1,human,red
        defeat_condition,gold=never,{GOLD}
        {SINGLEUNITWML_KONRAD}
        team_name,user_team_name=konrad,_"Konradâ€™s Forces"
        fog,shroud={FOG},{SHROUD}
        {FLAG_VARIANT long}
    [/side]
#enddef

# loyal, but for units who're also leaders
# (the regular loyal trait causes visual glitches)
#define TRAIT_LOYAL_DUMMY
    [trait]
        id,name=loyal_dummy,_"loyal"
        description= _ "Zero upkeep"
        {EFFECT loyal ()}
    [/trait]
#enddef

#define RECALL_KONRAD_AND_COMPANIONS X Y
    {RECALL_XY Konrad    {X} {Y}}
    {RECALL_XY Delfador  {X} {Y}}
    {RECALL_XY Moremirmu {X} {Y}}
    {RECALL_XY Harper    {X} {Y}}
    {RECALL_XY Allaril   {X} {Y}}
    {RECALL_XY Kalenz    {X} {Y}}
    {RECALL_XY Chantal   {X} {Y}}
#enddef




#######################################################################################################################################################
#                                                                FIND COMPANION AND SAY
#######################################################################################################################################################
#############################
# HELPER MACROS
#############################
#define SPEAK ID MESSAGE_SPEAKER MESSAGE_GENERIC
    # if we have a custom message, say that one
    {VARIABLE message {MESSAGE_SPEAKER}}
    [if]{HAVE_UNIT side,id=1,{ID}}
        {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes}
        {VARIABLE_CONDITIONAL message not_equals none}
    {THEN(
        [message]
            speaker={ID}
            message=$message
        [/message]
        {VARIABLE companion_already_spoke yes}
    )} [/if]
    
    # if we have a generic message, fall back to that one
    {VARIABLE message {MESSAGE_GENERIC}}
    [if]{HAVE_UNIT side,id=1,{ID}}
        {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes}
        {VARIABLE_CONDITIONAL message not_equals none}
    {THEN(
        [message]
            speaker={ID}
            message=$message
        [/message]
        {VARIABLE companion_already_spoke yes}
    )} [/if]
#enddef




#############################
# MAIN MACRO
#############################
# Priority: e.g. "Delfador,Harper" - first we check Delfador, then we check Harper, then we randomly check the other companions
# message_generic: if not provided, we'll only speak if one of the specific companions matches

#define FIND_COMPANION_AND_SAY
#arg PRIORITY
none#endarg
#arg MESSAGE_GENERIC
none#endarg
#arg MESSAGE_DELFADOR
none#endarg
#arg MESSAGE_MOREMIRMU
none#endarg
#arg MESSAGE_HARPER
none#endarg
#arg MESSAGE_ALLARIL
none#endarg
#arg MESSAGE_KALENZ
none#endarg
#arg MESSAGE_CHANTAL
none#endarg
    #############################
    # PRIORITIZE SPEAKER
    #############################
    {VARIABLE companions {PRIORITY}}
    [if] {VARIABLE_CONDITIONAL companions not_equals none} {THEN(
        [set_variables]
            name,moda=companions,replace
            [split]
                list,key=$companions,id # e.g. $companions[$i].id
                separator,remove_empty=",",yes
            [/split]
        [/set_variables]
        [foreach]
            array=companions
            variable=companion # e.g. $companion.id
            [do]
                [if] {VARIABLE_CONDITIONAL companion.id equals Delfador } {THEN(  {SPEAK $companion.id {MESSAGE_DELFADOR } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Moremirmu} {THEN(  {SPEAK $companion.id {MESSAGE_MOREMIRMU} {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Harper   } {THEN(  {SPEAK $companion.id {MESSAGE_HARPER   } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Allaril  } {THEN(  {SPEAK $companion.id {MESSAGE_ALLARIL  } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Kalenz   } {THEN(  {SPEAK $companion.id {MESSAGE_KALENZ   } {MESSAGE_GENERIC}}  )} [/if]
                [if] {VARIABLE_CONDITIONAL companion.id equals Chantal  } {THEN(  {SPEAK $companion.id {MESSAGE_CHANTAL  } {MESSAGE_GENERIC}}  )} [/if]
            [/do]
        [/foreach]
    )} [/if]
    
    #############################
    # RANDOMLY PICK SPEAKER
    #############################
    # randomly try a bunch of different speakers, in lieu of a proper array shuffle
    {VARIABLE companions "Delfador,Moremirmu,Harper,Allaril,Kalenz,Chantal"}
    
    # first prefer speaking on whichever companion has a custom message
    {REPEAT 50 (
        {VARIABLE_OP companion rand $companions}
        [if] {VARIABLE_CONDITIONAL companion equals Delfador } {THEN(  {SPEAK $companion {MESSAGE_DELFADOR } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Moremirmu} {THEN(  {SPEAK $companion {MESSAGE_MOREMIRMU} ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Harper   } {THEN(  {SPEAK $companion {MESSAGE_HARPER   } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Allaril  } {THEN(  {SPEAK $companion {MESSAGE_ALLARIL  } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Kalenz   } {THEN(  {SPEAK $companion {MESSAGE_KALENZ   } ""}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Chantal  } {THEN(  {SPEAK $companion {MESSAGE_CHANTAL  } ""}  )} [/if]
    )}
    
    # otherwise fall back to the generic message
    {REPEAT 50 (
        {VARIABLE_OP companion rand $companions}
        [if] {VARIABLE_CONDITIONAL companion equals Delfador } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Moremirmu} {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Harper   } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Allaril  } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Kalenz   } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
        [if] {VARIABLE_CONDITIONAL companion equals Chantal  } {THEN(  {SPEAK $companion "" {MESSAGE_GENERIC}}  )} [/if]
    )}
    
    #############################
    # NO COMPANION - PICK HIGH-LEVEL UNIT
    #############################
    [if] {VARIABLE_CONDITIONAL companion_already_spoke not_equals yes} {THEN(
        {CLEAR_VARIABLE speaker_id}
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,3-99 {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,2    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,1    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  side,level=1,0    {NOT id=Konrad}  ) id speaker_id})} [/if]
        [if] {NOT({HAVE_UNIT id=$speaker_id})} {THEN({STORE_UNIT_VAR (  id=Konrad                          ) id speaker_id})} [/if]
        {SPEAK $speaker_id "" {MESSAGE_GENERIC}}
    )} [/if]
    {CLEAR_VARIABLE companion,companions,message,companion_already_spoke,speaker_id}
#enddef





#######################################################################################################################################################
#                                                                 CHARACTER DEFINITIONS
#######################################################################################################################################################
#############################
# COMPANIONS
#############################
#define SINGLEUNITWML_KONRAD
    id,name,type=Konrad,_"Konrad",Fighter
    {MODIFICATIONS(
        {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
        [object] {EFFECT profile portrait="portraits/konrad-elvish.webp"} [/object])}
    canrecruit=yes
    side=1
#enddef

#define SINGLEUNITWML_DELFADOR
    id,name,type=Delfador,_"Delfador",Delfador
    {MODIFICATIONS(
        {TRAIT_LOYAL_DUMMY}{TRAIT_AGED}
        {TEAM_COLOR_OVERRIDE () purple} )}
    canrecruit=yes
#enddef

#define SINGLEUNITWML_ALLARIL
    id,name,type=Allaril,_"Allaril","Dwarvish Berserker"
    {MODIFICATIONS(
        {TRAIT_LOYAL}{TRAIT_HEALTHY}
        {TEAM_COLOR_OVERRIDE () brown} )}
#enddef


#############################
# NPCS
#############################
#define SINGLEUNITWML_KAYLAN
    id,name,type=Kaylan,_"Sir Kaylan","Grand Knight"
    {MODIFICATIONS(
        {TRAIT_LOYAL_DUMMY}{TRAIT_STRONG}
        {TEAM_COLOR_OVERRIDE () green} 
        [object] {EFFECT profile portrait="portraits/humans/grand-knight-2.webp"} [/object])}
    canrecruit=yes
#enddef

#define SINGLEUNITWML_ETHILIEL
    id,name,type=Ethiliel,_"Ethiliel","Elvish Shyde"
    {MODIFICATIONS(
        {TRAIT_LOYAL_DUMMY}{TRAIT_QUICK}
        {TEAM_COLOR_OVERRIDE () brightgreen} 
        [object] {EFFECT profile portrait="portraits/ethiliel.webp"} [/object])}
    canrecruit=yes
#enddef


#############################
# VILLIANS
#############################
#define SINGLEUNITWML_LISAR
    id,name,type=Lisar,_"Li'sar",Princess
    profile=portraits/lisar.webp
    {MODIFICATIONS(
        {TRAIT_LOYAL_DUMMY}{TRAIT_INTELLIGENT}
#         {TEAM_COLOR_OVERRIDE () lisarcolor}
    )}
    canrecruit=yes
#enddef


#############################
# PORTRAITS
#############################
#define KONRAD_VARIATION NAME
    #
    image=portraits/konrad-human-{NAME}.webp
#enddef

#define KONRAD_VARIATION_ELF NAME
    #
    image=portraits/konrad-elvish-{NAME}.webp
#enddef

#define DELFADOR_VARIATION NAME
    #
    image=portraits/delfador-{NAME}.webp
#enddef

#define DELFADOR_VARIATION_ELF NAME
    #
    image=portraits/delfador-elvish-{NAME}.webp
#enddef

#define DELFADOR_MENTORING
    #
    image=portraits/delfador-mentoring.webp
#enddef

#define DELFADOR_MENTORING_ELF
    #
    image=portraits/delfador-elvish-mentoring.webp
#enddef

#define LISAR_VARIATION NAME
    #
    image=portraits/lisar-{NAME}.webp
#enddef

#define ASHEVIERE_VARIATION NAME
    #
    image=portraits/asheviere-{NAME}.webp
#enddef





#######################################################################################################################################################
#                                                                   GLOBAL EVENTS
#######################################################################################################################################################
#define GLOBAL__HERODEATHS
    [event]
        name=last breath
        {FILTER id=Konrad}
        [message]
            speaker=Konrad
            message=_"We are vanquished, for I have been defeated!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
    [event]
        name=last breath
        {FILTER id=Delfador}
        [message]
            speaker=Delfador
            message=_"This is the end! Without me, who will guide the prince?"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
    [event]
        name=last breath
        {FILTER side,id=1,Lisar}
        [message]
            speaker=Lisar
            message=_"I canâ€™t believe it should end like this!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef

#define PRESERVE_NPC_XP ID
    [event]
        name=last breath
        {FILTER id={ID}}
        {STORE_UNIT_VAR id={ID} experience stored_{ID}_experience}
    [/event]
    [event]
        name=victory
        {FILTER_CONDITION( {HAVE_UNIT id={ID}} )}
        {STORE_UNIT_VAR id={ID} experience stored_{ID}_experience}
    [/event]
    [event]
        name=unit placed
        {FILTER id={ID}}
        {MODIFY_UNIT id={ID} experience $stored_{ID}_experience}
    [/event]
#enddef
#define GLOBAL__PRESERVE_NPC_XP
    {PRESERVE_NPC_XP Lisar}
#enddef




