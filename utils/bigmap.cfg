#textdomain wesnoth-h2tt


#define HTTT_BIGMAP
    [background_layer]
        image=maps/background.webp
        scale_vertically=yes
        scale_horizontally=no
        keep_aspect_ratio=yes
    [/background_layer]
    [background_layer]
        image=maps/httt.webp
        scale_vertically=yes
        scale_horizontally=no
        keep_aspect_ratio=yes
        base_layer=yes
    [/background_layer]
#enddef





#define SCHEDULE_NOTES
    # don't show these on turn 1, so we can gradually ease the player into things
    [note]
        description= _ "It is spring; the next scenario will have normal days and nights."
        [show_if] {VARIABLE_CONDITIONAL bm_tod.id equals spring} {LUA(<< return wesnoth.current.turn>1 >>)} [/show_if]
    [/note]
    [note]
        description= _ "It is summer; the next scenario will have unusually long days."
        [show_if] {VARIABLE_CONDITIONAL bm_tod.id equals summer} {LUA(<< return wesnoth.current.turn>1 >>)} [/show_if]
    [/note]
    [note]
        description= _ "It is autumn; the next scenario will have normal days and nights."
        [show_if] {VARIABLE_CONDITIONAL bm_tod.id equals autumn} {LUA(<< return wesnoth.current.turn>1 >>)} [/show_if]
    [/note]
    [note]
        description= _ "It is winter; the next scenario will have unusually short days."
        [show_if] {VARIABLE_CONDITIONAL bm_tod.id equals winter} {LUA(<< return wesnoth.current.turn>1 >>)} [/show_if]
    [/note]
#enddef



 




# meant to be used like "name={SIGHTED_BIGMAP id=Konrad}"
# can't use "name=sighted", because it doesn't trigger on [lift_fog]
#define SIGHTED_BIGMAP UNIT_FILTER
    enter hex
    {FILTER( side=1 {FILTER_LOCATION( radius={VISION} {FILTER {UNIT_FILTER}} )} )}
#enddef


#define PLACE_PORT X Y
    {PLACE_IMAGE bigmap/poi-port.png {X} {Y}}
    [event]
        name=moveto
        {FILTER id,race,x,y=Konrad,human,{X},{Y}}
        first_time_only=no
        
        #############################
        # TRANDFORM KONRAD INTO A BOAT
        #############################
        [if] {VARIABLE_CONDITIONAL bm_explained_port equals $null} {THEN(
            [message]
                speaker=Konrad
                message= _ "This port has many small boats for us to use! I wonâ€™t be able to travel through deep water, but I can certainly reach the coastal islands."
            [/message]
            {VARIABLE bm_explained_port yes}
        )} [/if]
        {STORE_UNIT_VAR id=Konrad type konrad_type}
        [transform_unit]
            id=Konrad
            transform_to=Boat
        [/transform_unit]
        {GIVE_OBJECT_TO id=Konrad (id=korand_boat_object
            {EFFECT movement_costs (replace=yes
                [movement_costs]
                    shallow_water,reef=1,1
                [/movement_costs] )}
        )}
        
        #############################
        # TRANSFORM BOAT BACK INTO KONRAD
        #############################
        [event]
            name=enter hex
            {FILTER( id,race=Konrad,mechanical {NOT({FILTER_LOCATION terrain=W*^*})} )}
            [remove_object]
                object_id=korand_boat_object
            [/remove_object]
            [transform_unit]
                id,transform_to=Konrad,$konrad_type
            [/transform_unit]
            [remove_trait]
                id,trait_id=Konrad,mechanical
            [/remove_trait]
            {CLEAR_VARIABLE konrad_type}
        [/event]
    [/event]
#enddef














#     {PLACE_POI 16 42 s05
#         SCENARIO_FILE=99_Dummy_Scenario
#         (PREVIEW_WML=
#             title=_"The Bay of Pearls"
#             difficulty,gold=1,1
#             recruit1=units/merfolk/brawler.png
#             recruit2=units/merfolk/fighter.png
#             recruit3=units/merfolk/hunter.png
#             recruit4=units/merfolk/initiate.png
#         )
#         #############################
#         # INCOMPLETE
#         #############################
#         (INCOMPLETE_PRESTART=
#             
#         )
#         (INCOMPLETE_SIGHTED=
#            
#         )
#         
#         #############################
#         # FAILED
#         #############################
#         (FAILED_PRESTART=
#             
#         )
#         (FAILED_MOVETO=
#             
#         )
#         
#         #############################
#         # COMPLETED
#         #############################
#         (COMPLETED_PRESTART=
#             
#         )
#         (JUSTCOMPLETED_START=
#             
#         )
#         (COMPLETED_MOVETO=
#             
#         )
#     }







    #######################################################################################################################################################
    #                                                                     POI HELPER MACRO
    #######################################################################################################################################################
#define PLACE_POI X Y SNUM
#arg SCENARIO_FILE
#endarg
#arg PREVIEW_WML
#endarg

#arg INCOMPLETE_PRESTART
#endarg
#arg INCOMPLETE_MOVETO
#endarg
#arg INCOMPLETE_APPROACHED
#endarg

#arg FAILED_PRESTART
#endarg
#arg FAILED_MOVETO
#endarg

#arg COMPLETED_PRESTART
#endarg
#arg COMPLETED_MOVETO
#endarg
#arg JUSTCOMPLETED_PRESTART
#endarg
#arg JUSTCOMPLETED_START
#endarg
    #############################
    # INCOMPLETE
    #############################
    [event]
        name=prestart
        {FILTER_CONDITION( {VARIABLE_CONDITIONAL status_{SNUM} equals $null} )}
        {PLACE_IMAGE bigmap/poi-battle.png {X} {Y}}
        
        # moveto event (preview the battle)
        {INCOMPLETE_PRESTART}
        [event]
            name,first_time_only=enter hex,no
            {FILTER id,x,y=Konrad,{X},{Y}}
            {INCOMPLETE_MOVETO}
            
            # preview scenario
            [display_scenario_preview]
                {PREVIEW_WML}
                scenario={SNUM}
            [/display_scenario_preview]
            [if] {VARIABLE_CONDITIONAL status_{SNUM} equals "in_progress"} {THEN(
                [endlevel]
                    result,next_scenario=victory,{SCENARIO_FILE}
                    bonus,carryover_report=no,no
                    replay_save,linger_mode,reveal_map=no,no,no
                    {NEW_GOLD_CARRYOVER 100}
                [/endlevel]
            )} {ELSE(
                {MOVE_UNIT id=$unit.id $x2 $y2}
            )} [/if]
        [/event]
        
        # approach event
        [event]
            name=enter hex
            {FILTER( side=1 {FILTER_LOCATION( x,y,radius={X},{Y},4 )} )}
            {FILTER_CONDITION( {VARIABLE_CONDITIONAL approached_{SNUM} equals $null} )} 
            [lift_fog]
                {FILTER_SIDE side=1}
                x,y,radius={X},{Y},3
            [/lift_fog]
            [remove_shroud]
                {FILTER_SIDE side=1}
                x,y,radius={X},{Y},3
            [/remove_shroud]
            {INCOMPLETE_APPROACHED}
            {VARIABLE approached_{SNUM} yes}
        [/event]
    [/event]
    #############################
    # FAILED
    #############################
    [event]
        name=prestart
        {FILTER_CONDITION( {VARIABLE_CONDITIONAL status_{SNUM} equals failed} )}
        {PLACE_IMAGE bigmap/poi-failed.png {X} {Y}}
        {FAILED_PRESTART}
        [event]
            name,first_time_only=moveto,no
            {FILTER id,x,y=Konrad,{X},{Y}}
            {FAILED_MOVETO}
        [/event]
    [/event]
    #############################
    # COMPLETED
    #############################
    # just barely completed
    [event]
        name=prestart # this happens 1st
        {FILTER_CONDITION( {VARIABLE_CONDITIONAL status_{SNUM} equals in_progress} )}
        [remove_shroud]
            {FILTER_SIDE side=1}
            x,y,radius={X},{Y},{VISION}
        [/remove_shroud]
        [lift_fog]
            {FILTER_SIDE side=1}
            x,y,radius,multiturn={X},{Y},{VISION},yes
        [/lift_fog]
        {SCROLL_TO {X} {Y}}
        {JUSTCOMPLETED_PRESTART}
        [event]
            name=start # this happens 3rd
            {DELAY 500}{RECALL_XY Konrad {X} {Y}}
            {JUSTCOMPLETED_START}
        [/event]
        {VARIABLE status_{SNUM} completed}
    [/event]
    # completed, either now or earlier
    [event]
        name=prestart # this happens 2nd
        {FILTER_CONDITION( {VARIABLE_CONDITIONAL status_{SNUM} equals completed} )}
        {PLACE_IMAGE bigmap/poi-completed.png {X} {Y}}
        {COMPLETED_PRESTART}
        [event]
            name,first_time_only=moveto,no
            {FILTER id,x,y=Konrad,{X},{Y}}
            {COMPLETED_MOVETO}
        [/event]
    [/event]
#enddef

