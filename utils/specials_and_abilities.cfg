#textdomain wesnoth-h2tt






#define ABILITY_EXACTING
    [dummy] # if you change this ID, also change the unit filter in the implementation
        id,name=exacting,_"exacting"
        description= _ "Li’sar has drilled her infantry to perfection. Though few in number, each of her soldiers possesses skills not usually seen on others of their type."
    [/dummy]
#enddef


#define MARCH_MOVEMENT
    # also used by Lisar
    flat,sand,frozen,cave=1,1,2,1
    forest,hills,mountains,fungus=1,1,3,2
    reef,shallow_water,swamp_water=2,2,2
    village,castle=1,1
#enddef
#define MARCH_DEFENSE
    # also used by Lisar
#     mountains=50
    flat,sand,frozen,cave=60,70,70,60
    forest,hills,mountains,fungus=50,50,50,50
    reef,shallow_water,swamp_water=70,80,80
    village,castle=50,40
#enddef
#define GLOBAL__EXACTING_IMPLEMENTATION
    #------------------
    # EXPLAIN EXACTING
    #------------------
    [event]
        name=side 1 turn end
        {FILTER_CONDITION( {HAVE_UNIT id=Lisar} )}
        {FILTER_CONDITION( {VARIABLE_CONDITIONAL exacting_explained not_equals yes} )}
        [message]
            speaker=Konrad
            message= _ "I studied Li’sar back in the Aethenwood! Though her company is not large in number, each of them possesses skills not usually seen on others of their type."
        [/message]
        {VARIABLE exacting_explained yes}
    [/event]
    
    #------------------
    # HEAVY INFANTRYMAN
    #------------------
    # fearless + march makes them great in caves (and HI also get 40% cave defense by default for some reason)
    [event]
        name,first_time_only=unit placed,no
        {FILTER type_adv_tree="Heavy Infantryman"}
        {FILTER_CONDITION( {HAVE_UNIT side,ability=$unit.side,exacting} )}
        
        # always fearless. Because why not? (and important for the Sceptre of Fire cave scenario)
        {STORE_UNIT_VAR id=$unit.id hitpoints     exacting_hitpoints}
        {STORE_UNIT_VAR id=$unit.id max_hitpoints exacting_max_hitpoints}
        [remove_trait] id,trait_id=$unit.id,quick       {BR}[/remove_trait] # don't remove loyal
        [remove_trait] id,trait_id=$unit.id,strong      {BR}[/remove_trait]
        [remove_trait] id,trait_id=$unit.id,intelligent {BR}[/remove_trait]
        [remove_trait] id,trait_id=$unit.id,resilient   {BR}[/remove_trait]
        [remove_trait] id,trait_id=$unit.id,fearless    {BR}[/remove_trait]
        [modify_unit] {FILTER id=$unit.id} {TRAIT_FEARLESS} [/modify_unit]
        {VARIABLE_OP traitname rand "1,2"} # always either strong or resilient. Intelligent isn't very useful for AI and quick+march makes them too fast
        [if] {VARIABLE_CONDITIONAL traitname equals 1} {THEN([modify_unit] {FILTER id=$unit.id} {TRAIT_STRONG}      [/modify_unit])} [/if]
        [if] {VARIABLE_CONDITIONAL traitname equals 2} {THEN([modify_unit] {FILTER id=$unit.id} {TRAIT_RESILIENT}   [/modify_unit])} [/if]
        [if] {VARIABLE_CONDITIONAL exacting_hitpoints equals $exacting_max_hitpoints} {THEN( {FULL_HEAL id=$unit.id} )} [/if]
        {CLEAR_VARIABLE exacting_hitpoints,exacting_max_hitpoints}
        
        # "march" ability
        {REMOVE_OBJECT exacting_object id=$unit.id}
        {GIVE_OBJECT_TO id=$unit.id (id=exacting_object
            {EFFECT new_ability ([abilities]
                [dummy]
                    id,name=march,_"march"
                    description= _ "This unit has reduced movement cost and improved dodge on most terrains."
                [/dummy]
            [/abilities] )}
            {EFFECT movement_costs (replace=yes
                [movement_costs]{MARCH_MOVEMENT}[/movement_costs] )}
            {EFFECT defense (replace=yes
                [defense]       {MARCH_DEFENSE}        [/defense] )}
        )}
    [/event]
    #------------------
    # FENCER
    #------------------
    # backstabs on a fencer. Extremely strong
    [event]
        name,first_time_only=unit placed,no
        {FILTER type_adv_tree=Fencer}
        {FILTER_CONDITION( {HAVE_UNIT side,ability=$unit.side,exacting} )}
        
        {REMOVE_OBJECT exacting_object id=$unit.id}
        {GIVE_OBJECT_TO id=$unit.id (id=exacting_object
            {EFFECT attack (range=melee
                [set_specials] mode=append {WEAPON_SPECIAL_BACKSTAB} [/set_specials] )}
        )}
    [/event]
    #------------------
    # BOWMAN
    #------------------
    # marksman is useful, but not nearly as extreme as HI/fencers
    [event]
        name,first_time_only=unit placed,no
        {FILTER type_adv_tree=Bowman}
        {FILTER_CONDITION( {HAVE_UNIT side,ability=$unit.side,exacting} )}
        
        {REMOVE_OBJECT exacting_object id=$unit.id}
        {GIVE_OBJECT_TO id=$unit.id (id=exacting_object
            {EFFECT attack (range=ranged
                [set_specials] mode=append {WEAPON_SPECIAL_MARKSMAN} [/set_specials] )}
        )}
    [/event]
#enddef

